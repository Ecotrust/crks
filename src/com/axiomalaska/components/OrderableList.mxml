<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" borderAlpha="0">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			
			import com.axiomalaska.components.OrderableListItem;
			
			import flash.display.DisplayObject;
			import flash.display.MovieClip;
			import flash.display.Sprite;
			import flash.events.Event;
			import flash.events.MouseEvent;
			import flash.geom.Rectangle;
			
			import mx.containers.VBox;
			import mx.core.UIComponent;
			import mx.events.DragEvent;
			
			
			public var items:Array = new Array();
			
			
			
			public var VERTICAL_LAYOUT:String = 'vertical';
			public var HORIZONTAL_LAYOUT:String = 'horizontal';
			public var GRID_LAYOUT:String = 'grid';
			
			public var orientation:String = VERTICAL_LAYOUT;
			
			private var _runct:int = 0;
			
			public function addItem($item:OrderableListItem):void{

				$item.addEventListener(MouseEvent.MOUSE_DOWN,onDown);
				$item.buttonMode = true;
				$item.addEventListener(Event.CHANGE,onItemSelect);
				_itemLayer.addChild($item);
				//addChild(item);
				items.push($item);
				_setOrder();
				dispatchEvent(new Event(Event.CHANGE));
				
			}
			
			private function onItemSelect($evt:Event):void{
				_setOrder();
				dispatchEvent(new Event(Event.CHANGE));
			}
			
			private function onDown($evt:MouseEvent):void{
				//removeEventListener(Event.ENTER_FRAME, onLoop);
				//var _obj:Sprite = $evt.currentTarget.parent.dragLayer as Sprite;
				//
				
				_dragLayer.visible = true;
				_dragLayer.graphics.clear();
				_dragLayer.graphics.beginFill(0xCCCCCC,0);
				_dragLayer.graphics.drawRect(0,0,_dragLayer.width,_dragLayer.height);
				
				trace($evt.currentTarget.name);
				var _obj:OrderableListItem = $evt.currentTarget as OrderableListItem;
				var _ind:int = _itemLayer.getChildIndex(_obj);
				//var _ind = 0;
				
				_obj.alpha = .5;
				_dragLayer.addChild(_obj);
				_itemLayer.addChildAt(_obj.dragShadow,_ind);
				_obj.startDrag(false,new Rectangle(
					0,0,20,this.parent.height
				));
				
				//_obj.addEventListener(MouseEvent.MOUSE_MOVE,updateDragLocation);
				_obj.addEventListener(MouseEvent.MOUSE_UP, onItemUp, false, 0, true);
				/*_obj.addEventListener(DragEvent.DRAG_COMPLETE,function($evt:DragEvent):void{
				_obj.alpha = 1;
				_itemLayer.addChild(_obj);
				_obj.stopDrag();
				addEventListener(Event.ENTER_FRAME, onLoop, false, 0, true);
				_obj.dispatchEvent(new DragEvent(DragEvent.DRAG_DROP));
				});*/
				
			}
			
			private function updateDragLocation($evt:MouseEvent):void{
				/*var _obj:Sprite = $evt.currentTarget as Sprite;
				var _newInd:int = 0;
				for (var i:int = 0; i < _itemLayer.numChildren; i++){
					if(_obj.y <= _itemLayer.getChildAt(i).y){
						_newInd = i;
					}
				}
				//_itemLayer.removeChild(_obj.dragShadow);
				_itemLayer.addChildAt(_obj,_newInd);*/
			}
			
			private function onItemUp($evt:MouseEvent):void{
				//var _obj:Sprite = $evt.currentTarget as Sprite;
				
				_dragLayer.visible = false;
				
				var _obj:OrderableListItem = $evt.currentTarget as OrderableListItem;
				_obj.alpha = 1;
				//_itemLayer.addChild(_obj);
				_obj.stopDrag();
				
				var _newInd:int = 0;
				var _done:Boolean = false;
				var _oby:Number = _obj.y + _obj.height/2;
				
				if((Math.abs(_obj.y) - Math.abs(_obj.dragShadow.y)) < _obj.height/2){
					_newInd = _itemLayer.getChildIndex(_obj.dragShadow);
				}else{
				
					for (var i:int = 0; i < items.length; i++){
						if(!_done && _obj.name != items[i].name){
							var _py:int = 0;
							var _ny:int = this.height;
							
							if(i > 0){
								_py = items[i].y + items[i].height/2; 
							}
							
							if((i + 1) < (items.length - 2)){
								_ny = items[i + 1].y + items[i + 1].height/2;
							}
							
						
							if(_oby > _py && _oby < _ny){
								_newInd = i + 1;
							}
							trace('----> ' + _oby + ' > ' + _py + ' &&  < ' + _ny);
						}
						//trace('[' + _obj.title + ']' + _obj.y + '>=[' + items[i].title + ']' + (items[i].y - items[i].height/2));
					}
					
					if(_newInd > items.length){
						_newInd = items.length;
					}
				}
				
				trace('NEW IND = ' + _newInd);
				_itemLayer.addChildAt(_obj,_newInd);
				_itemLayer.removeChild(_obj.dragShadow);
				
				
				
				//addEventListener(Event.ENTER_FRAME, onLoop, false, 0, true);
				_setOrder();
				_obj.dispatchEvent(new DragEvent(DragEvent.DRAG_DROP));
				dispatchEvent(new Event(Event.CHANGE));
				//_reOrder();
				//stage.removeEventListener(MouseEvent.MOUSE_UP,onItemUp);	
			}
			
			/*private function onLoop($evt:Event):void{
				runLoop();
			}
			
			private function runLoop():void {
				// sort the items array by the x property
				// of each clip
				items.sort(orderY);
				
				// make sure the first box always eases to 
				// the same position (50, 200);
				items[0].x += (0 - items[0].x) / 1.05;
				items[0].y += (0 - items[0].y) / 1.05;
				//items[0].data.currentIndex = 0;
				items[i].metaData.currentIndex = 0;
				
				var done:Boolean = true;
				// align items
				for (var i:int = 1; i < items.length; i++){
					var OLI:OrderableListItem = items[i];
					var OLIprev:OrderableListItem = items[i - 1];
					//OLI.data.currentIndex = i;
					OLI.metaData.currentIndex = i;
					//trace('CI = ' + OLI.currentIndex);
					OLI.xDest = 0;
					//OLI.yDest = OLIprev.y + OLIprev.height;
					//OLI.y += (OLI.yDest - OLI.y) / 1.05;
					//OLI.x += (OLI.xDest - OLI.x) / 1.05;
					
					//trace(b.x + '!=' + b.xDest + '||' + b.y + '!=' + b.yDest);
					
					
					if(Math.abs(OLI.x - OLI.xDest) > .1 || Math.abs(OLI.y - OLI.yDest) > .1){
						done = false; 
						dispatchEvent(new Event(Event.CHANGE));
					}
					
				}
				
				if(done){
					removeEventListener(Event.ENTER_FRAME, onLoop);
				}
				
				trace(_runct ++);
				
			}*/
			
			private function _setOrder():void{
				items.sort(orderY);
				var c:int = 0;
				for (var i:int =  0; i < items.length; i++){
					//items[i].data.currentIndex = i;
					//items[i].metaData.currentIndex = i;
					if(items[i].selected){
						//trace('setting currentIndex ' + items[i].title + ' ' + _itemLayer.getChildIndex(items[i]));
						items[i].layer.zindex = c;
						c ++;
						//trace('setting currentIndex ' + items[i].title + ' ' + items[i].layer.zindex);
					}else{
						items[i].layer.zindex = NaN;
					}
				}
			}
			
			private function orderY(a:*, b:*):int 
			{  
				if (a.y < b.y) 
				{ 
					return -1; 
				} 
				else if (a.y > b.y) 
				{ 
					return 1; 
				} 
				else 
				{ 
					return 0; 
				} 
			} 
			
			
		]]>
	</fx:Script>
	<mx:VBox id="_itemLayer" width="100%" height="100%" paddingTop="5" paddingBottom="5" paddingLeft="5" paddingRight="5" />
	<mx:Canvas id="_dragLayer" width="100%" height="100%" />
	
</s:Panel>
